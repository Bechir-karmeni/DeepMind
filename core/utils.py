from io import BytesIO
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas

def generate_big5_report(openness, conscientiousness, extraversion, agreeableness, neuroticism):
    report = []

    report.append("üîµ R√©sultats Big Five :")
    if openness > 7:
        report.append("Grande ouverture d'esprit : vous √™tes cr√©atif(ve) et curieux(se).")
    else:
        report.append("Faible ouverture d'esprit : vous √™tes plut√¥t conventionnel(le).")

    if conscientiousness > 7:
        report.append("Haute conscienciosit√© : vous √™tes organis√©(e) et fiable.")
    else:
        report.append("Faible conscienciosit√© : vous aimez improviser et √™tes flexible.")

    if extraversion > 7:
        report.append("Extraverti(e) : vous √™tes sociable et √©nergique.")
    else:
        report.append("Introverti(e) : vous √™tes plus r√©serv√©(e) et introspectif(ve).")

    if agreeableness > 7:
        report.append("Haut en agr√©abilit√© : vous √™tes empathique et coop√©ratif(ve).")
    else:
        report.append("Faible en agr√©abilit√© : vous √™tes plus direct(e) et comp√©titif(ve).")

    if neuroticism > 7:
        report.append("Niveau √©lev√© de neuroticisme : vous √™tes plus sensible au stress.")
    else:
        report.append("Niveau faible de neuroticisme : vous √™tes √©motionnellement stable.")

    return report

def generate_mbi_report(mbi_score):
    report = []
    report.append("üß† R√©sultat Burnout MBI :")
    if mbi_score > 7:
        report.append("Risque √©lev√© de burnout d√©tect√©. ‚ö†Ô∏è")
    elif mbi_score > 4:
        report.append("Burnout mod√©r√© : soyez attentif(ve) √† vos sympt√¥mes.")
    else:
        report.append("Pas de signes importants de burnout. ‚úÖ")
    return report

def generate_karasek_report(demand, control, support):
    report = []
    report.append("‚öôÔ∏è R√©sultat Stress Travail (Karasek) :")

    if demand > 7 and control < 4:
        report.append("Job strain √©lev√© : beaucoup d'exigences, peu de contr√¥le.")
    elif demand > 7 and control > 6:
        report.append("Travail actif : exigence √©lev√©e mais autonomie √©lev√©e.")
    elif demand < 4 and control < 4:
        report.append("Travail passif : peu d'exigences, peu d'autonomie.")
    else:
        report.append("Travail d√©tendu : √©quilibre satisfaisant entre exigences et contr√¥le.")

    if support < 5:
        report.append("Attention : faible soutien social au travail.")
    else:
        report.append("Bon niveau de soutien social.")

    return report

def generate_pdf(report_lines):
    buffer = BytesIO()
    p = canvas.Canvas(buffer, pagesize=letter)
    width, height = letter

    p.setFont("Helvetica-Bold", 16)
    p.drawString(50, height - 50, "üß† R√©sultats Psychom√©triques Personnalis√©s")

    p.setFont("Helvetica", 12)
    y = height - 100
    for line in report_lines:
        if y < 50:
            p.showPage()
            y = height - 50
        p.drawString(50, y, line)
        y -= 20

    p.showPage()
    p.save()
    buffer.seek(0)
    return buffer
